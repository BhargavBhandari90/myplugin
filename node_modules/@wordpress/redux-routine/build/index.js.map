{"version":3,"sources":["@wordpress/redux-routine/src/index.js"],"names":["createMiddleware","controls","store","runtime","dispatch","next","action"],"mappings":";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,gBAAT,GAA2C;AAAA,MAAhBC,QAAgB,uEAAL,EAAK;AACzD,SAASC,KAAF,IAAa;AACnB,UAAMC,OAAO,GAAG,sBAAeF,QAAf,EAAyBC,KAAK,CAACE,QAA/B,CAAhB;AACA,WAASC,IAAF,IAAcC,MAAF,IAAc;AAChC,UAAK,CAAE,0BAAaA,MAAb,CAAP,EAA+B;AAC9B,eAAOD,IAAI,CAAEC,MAAF,CAAX;AACA;;AAED,aAAOH,OAAO,CAAEG,MAAF,CAAd;AACA,KAND;AAOA,GATD;AAUA","sourcesContent":["/**\n * Internal dependencies\n */\nimport isGenerator from './is-generator';\nimport createRuntime from './runtime';\n\n/**\n * Creates a Redux middleware, given an object of controls where each key is an\n * action type for which to act upon, the value a function which returns either\n * a promise which is to resolve when evaluation of the action should continue,\n * or a value. The value or resolved promise value is assigned on the return\n * value of the yield assignment. If the control handler returns undefined, the\n * execution is not continued.\n *\n * @param {Record<string, (value: import('redux').AnyAction) => Promise<boolean> | boolean>} controls Object of control handlers.\n *\n * @return {import('redux').Middleware} Co-routine runtime\n */\nexport default function createMiddleware( controls = {} ) {\n\treturn ( store ) => {\n\t\tconst runtime = createRuntime( controls, store.dispatch );\n\t\treturn ( next ) => ( action ) => {\n\t\t\tif ( ! isGenerator( action ) ) {\n\t\t\t\treturn next( action );\n\t\t\t}\n\n\t\t\treturn runtime( action );\n\t\t};\n\t};\n}\n"]}