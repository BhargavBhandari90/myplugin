{"version":3,"sources":["@wordpress/hooks/src/createAddHook.js"],"names":["createAddHook","hooks","storeKey","addHook","hookName","namespace","callback","priority","hooksStore","console","error","handler","handlers","i","length","splice","__current","forEach","hookInfo","name","currentIndex","runs","doAction"],"mappings":";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,aAAT,CAAwBC,KAAxB,EAA+BC,QAA/B,EAA0C;AACzC,SAAO,SAASC,OAAT,CAAkBC,QAAlB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiE;AAAA,QAAhBC,QAAgB,uEAAL,EAAK;AACvE,UAAMC,UAAU,GAAGP,KAAK,CAAEC,QAAF,CAAxB;;AAEA,QAAK,CAAE,+BAAkBE,QAAlB,CAAP,EAAsC;AACrC;AACA;;AAED,QAAK,CAAE,gCAAmBC,SAAnB,CAAP,EAAwC;AACvC;AACA;;AAED,QAAK,eAAe,OAAOC,QAA3B,EAAsC;AACrC;AACAG,MAAAA,OAAO,CAACC,KAAR,CAAe,uCAAf;AACA;AACA,KAfsE,CAiBvE;;;AACA,QAAK,aAAa,OAAOH,QAAzB,EAAoC;AACnC;AACAE,MAAAA,OAAO,CAACC,KAAR,CACC,mDADD;AAGA;AACA;;AAED,UAAMC,OAAO,GAAG;AAAEL,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBF,MAAAA;AAAtB,KAAhB;;AAEA,QAAKG,UAAU,CAAEJ,QAAF,CAAf,EAA8B;AAC7B;AACA,YAAMQ,QAAQ,GAAGJ,UAAU,CAAEJ,QAAF,CAAV,CAAuBQ,QAAxC;AAEA;;AACA,UAAIC,CAAJ;;AACA,WAAMA,CAAC,GAAGD,QAAQ,CAACE,MAAnB,EAA2BD,CAAC,GAAG,CAA/B,EAAkCA,CAAC,EAAnC,EAAwC;AACvC,YAAKN,QAAQ,IAAIK,QAAQ,CAAEC,CAAC,GAAG,CAAN,CAAR,CAAkBN,QAAnC,EAA8C;AAC7C;AACA;AACD;;AAED,UAAKM,CAAC,KAAKD,QAAQ,CAACE,MAApB,EAA6B;AAC5B;AACAF,QAAAA,QAAQ,CAAEC,CAAF,CAAR,GAAgBF,OAAhB;AACA,OAHD,MAGO;AACN;AACAC,QAAAA,QAAQ,CAACG,MAAT,CAAiBF,CAAjB,EAAoB,CAApB,EAAuBF,OAAvB;AACA,OAlB4B,CAoB7B;AACA;AACA;AACA;;;AACAH,MAAAA,UAAU,CAACQ,SAAX,CAAqBC,OAArB,CAAgCC,QAAF,IAAgB;AAC7C,YACCA,QAAQ,CAACC,IAAT,KAAkBf,QAAlB,IACAc,QAAQ,CAACE,YAAT,IAAyBP,CAF1B,EAGE;AACDK,UAAAA,QAAQ,CAACE,YAAT;AACA;AACD,OAPD;AAQA,KAhCD,MAgCO;AACN;AACAZ,MAAAA,UAAU,CAAEJ,QAAF,CAAV,GAAyB;AACxBQ,QAAAA,QAAQ,EAAE,CAAED,OAAF,CADc;AAExBU,QAAAA,IAAI,EAAE;AAFkB,OAAzB;AAIA;;AAED,QAAKjB,QAAQ,KAAK,WAAlB,EAAgC;AAC/BH,MAAAA,KAAK,CAACqB,QAAN,CACC,WADD,EAEClB,QAFD,EAGCC,SAHD,EAICC,QAJD,EAKCC,QALD;AAOA;AACD,GA7ED;AA8EA;;eAEcP,a","sourcesContent":["/**\n * Internal dependencies\n */\nimport validateNamespace from './validateNamespace.js';\nimport validateHookName from './validateHookName.js';\n\n/**\n * @callback AddHook\n *\n * Adds the hook to the appropriate hooks container.\n *\n * @param {string}               hookName      Name of hook to add\n * @param {string}               namespace     The unique namespace identifying the callback in the form `vendor/plugin/function`.\n * @param {import('.').Callback} callback      Function to call when the hook is run\n * @param {number}               [priority=10] Priority of this hook\n */\n\n/**\n * Returns a function which, when invoked, will add a hook.\n *\n * @param {import('.').Hooks}    hooks    Hooks instance.\n * @param {import('.').StoreKey} storeKey\n *\n * @return {AddHook} Function that adds a new hook.\n */\nfunction createAddHook( hooks, storeKey ) {\n\treturn function addHook( hookName, namespace, callback, priority = 10 ) {\n\t\tconst hooksStore = hooks[ storeKey ];\n\n\t\tif ( ! validateHookName( hookName ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( ! validateNamespace( namespace ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( 'function' !== typeof callback ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error( 'The hook callback must be a function.' );\n\t\t\treturn;\n\t\t}\n\n\t\t// Validate numeric priority\n\t\tif ( 'number' !== typeof priority ) {\n\t\t\t// eslint-disable-next-line no-console\n\t\t\tconsole.error(\n\t\t\t\t'If specified, the hook priority must be a number.'\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = { callback, priority, namespace };\n\n\t\tif ( hooksStore[ hookName ] ) {\n\t\t\t// Find the correct insert index of the new hook.\n\t\t\tconst handlers = hooksStore[ hookName ].handlers;\n\n\t\t\t/** @type {number} */\n\t\t\tlet i;\n\t\t\tfor ( i = handlers.length; i > 0; i-- ) {\n\t\t\t\tif ( priority >= handlers[ i - 1 ].priority ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( i === handlers.length ) {\n\t\t\t\t// If append, operate via direct assignment.\n\t\t\t\thandlers[ i ] = handler;\n\t\t\t} else {\n\t\t\t\t// Otherwise, insert before index via splice.\n\t\t\t\thandlers.splice( i, 0, handler );\n\t\t\t}\n\n\t\t\t// We may also be currently executing this hook.  If the callback\n\t\t\t// we're adding would come after the current callback, there's no\n\t\t\t// problem; otherwise we need to increase the execution index of\n\t\t\t// any other runs by 1 to account for the added element.\n\t\t\thooksStore.__current.forEach( ( hookInfo ) => {\n\t\t\t\tif (\n\t\t\t\t\thookInfo.name === hookName &&\n\t\t\t\t\thookInfo.currentIndex >= i\n\t\t\t\t) {\n\t\t\t\t\thookInfo.currentIndex++;\n\t\t\t\t}\n\t\t\t} );\n\t\t} else {\n\t\t\t// This is the first hook of its type.\n\t\t\thooksStore[ hookName ] = {\n\t\t\t\thandlers: [ handler ],\n\t\t\t\truns: 0,\n\t\t\t};\n\t\t}\n\n\t\tif ( hookName !== 'hookAdded' ) {\n\t\t\thooks.doAction(\n\t\t\t\t'hookAdded',\n\t\t\t\thookName,\n\t\t\t\tnamespace,\n\t\t\t\tcallback,\n\t\t\t\tpriority\n\t\t\t);\n\t\t}\n\t};\n}\n\nexport default createAddHook;\n"]}