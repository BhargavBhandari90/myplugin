{"version":3,"sources":["@wordpress/hooks/src/validateHookName.js"],"names":["validateHookName","hookName","console","error","test"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,gBAAT,CAA2BC,QAA3B,EAAsC;AACrC,MAAK,aAAa,OAAOA,QAApB,IAAgC,OAAOA,QAA5C,EAAuD;AACtD;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAe,2CAAf;AACA,WAAO,KAAP;AACA;;AAED,MAAK,MAAMC,IAAN,CAAYH,QAAZ,CAAL,EAA8B;AAC7B;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAe,uCAAf;AACA,WAAO,KAAP;AACA;;AAED,MAAK,CAAE,4BAA4BC,IAA5B,CAAkCH,QAAlC,CAAP,EAAsD;AACrD;AACAC,IAAAA,OAAO,CAACC,KAAR,CACC,mFADD;AAGA,WAAO,KAAP;AACA;;AAED,SAAO,IAAP;AACA;;eAEcH,gB","sourcesContent":["/**\n * Validate a hookName string.\n *\n * @param {string} hookName The hook name to validate. Should be a non empty string containing\n *                          only numbers, letters, dashes, periods and underscores. Also,\n *                          the hook name cannot begin with `__`.\n *\n * @return {boolean} Whether the hook name is valid.\n */\nfunction validateHookName( hookName ) {\n\tif ( 'string' !== typeof hookName || '' === hookName ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name must be a non-empty string.' );\n\t\treturn false;\n\t}\n\n\tif ( /^__/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error( 'The hook name cannot begin with `__`.' );\n\t\treturn false;\n\t}\n\n\tif ( ! /^[a-zA-Z][a-zA-Z0-9_.-]*$/.test( hookName ) ) {\n\t\t// eslint-disable-next-line no-console\n\t\tconsole.error(\n\t\t\t'The hook name can only contain numbers, letters, dashes, periods and underscores.'\n\t\t);\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport default validateHookName;\n"]}