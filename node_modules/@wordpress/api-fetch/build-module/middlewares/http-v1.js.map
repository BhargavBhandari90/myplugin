{"version":3,"sources":["@wordpress/api-fetch/src/middlewares/http-v1.js"],"names":["OVERRIDE_METHODS","Set","DEFAULT_METHOD","httpV1Middleware","options","next","method","has","toUpperCase","headers"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAG,IAAIC,GAAJ,CAAS,CAAE,OAAF,EAAW,KAAX,EAAkB,QAAlB,CAAT,CAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,cAAc,GAAG,KAAvB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,gBAAgB,GAAG,CAAEC,OAAF,EAAWC,IAAX,KAAqB;AAC7C,QAAM;AAAEC,IAAAA,MAAM,GAAGJ;AAAX,MAA8BE,OAApC;;AACA,MAAKJ,gBAAgB,CAACO,GAAjB,CAAsBD,MAAM,CAACE,WAAP,EAAtB,CAAL,EAAoD;AACnDJ,IAAAA,OAAO,GAAG,EACT,GAAGA,OADM;AAETK,MAAAA,OAAO,EAAE,EACR,GAAGL,OAAO,CAACK,OADH;AAER,kCAA0BH,MAFlB;AAGR,wBAAgB;AAHR,OAFA;AAOTA,MAAAA,MAAM,EAAE;AAPC,KAAV;AASA;;AAED,SAAOD,IAAI,CAAED,OAAF,CAAX;AACA,CAfD;;AAiBA,eAAeD,gBAAf","sourcesContent":["/**\n * Set of HTTP methods which are eligible to be overridden.\n *\n * @type {Set<string>}\n */\nconst OVERRIDE_METHODS = new Set( [ 'PATCH', 'PUT', 'DELETE' ] );\n\n/**\n * Default request method.\n *\n * \"A request has an associated method (a method). Unless stated otherwise it\n * is `GET`.\"\n *\n * @see  https://fetch.spec.whatwg.org/#requests\n *\n * @type {string}\n */\nconst DEFAULT_METHOD = 'GET';\n\n/**\n * API Fetch middleware which overrides the request method for HTTP v1\n * compatibility leveraging the REST API X-HTTP-Method-Override header.\n *\n * @type {import('../types').APIFetchMiddleware}\n */\nconst httpV1Middleware = ( options, next ) => {\n\tconst { method = DEFAULT_METHOD } = options;\n\tif ( OVERRIDE_METHODS.has( method.toUpperCase() ) ) {\n\t\toptions = {\n\t\t\t...options,\n\t\t\theaders: {\n\t\t\t\t...options.headers,\n\t\t\t\t'X-HTTP-Method-Override': method,\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tmethod: 'POST',\n\t\t};\n\t}\n\n\treturn next( options );\n};\n\nexport default httpV1Middleware;\n"]}