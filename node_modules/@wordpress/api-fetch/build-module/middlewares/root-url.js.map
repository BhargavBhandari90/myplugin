{"version":3,"sources":["@wordpress/api-fetch/src/middlewares/root-url.js"],"names":["namespaceAndEndpointMiddleware","createRootURLMiddleware","rootURL","options","next","optionsWithPath","url","path","apiRoot","indexOf","replace"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,8BAAP,MAA2C,sBAA3C;AAEA;AACA;AACA;AACA;;AACA,MAAMC,uBAAuB,GAAKC,OAAF,IAAe,CAAEC,OAAF,EAAWC,IAAX,KAAqB;AACnE,SAAOJ,8BAA8B,CAAEG,OAAF,EAAaE,eAAF,IAAuB;AACtE,QAAIC,GAAG,GAAGD,eAAe,CAACC,GAA1B;AACA,QAAIC,IAAI,GAAGF,eAAe,CAACE,IAA3B;AACA,QAAIC,OAAJ;;AAEA,QAAK,OAAOD,IAAP,KAAgB,QAArB,EAAgC;AAC/BC,MAAAA,OAAO,GAAGN,OAAV;;AAEA,UAAK,CAAC,CAAD,KAAOA,OAAO,CAACO,OAAR,CAAiB,GAAjB,CAAZ,EAAqC;AACpCF,QAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAc,GAAd,EAAmB,GAAnB,CAAP;AACA;;AAEDH,MAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAc,KAAd,EAAqB,EAArB,CAAP,CAP+B,CAS/B;AACA;;AACA,UACC,aAAa,OAAOF,OAApB,IACA,CAAC,CAAD,KAAOA,OAAO,CAACC,OAAR,CAAiB,GAAjB,CAFR,EAGE;AACDF,QAAAA,IAAI,GAAGA,IAAI,CAACG,OAAL,CAAc,GAAd,EAAmB,GAAnB,CAAP;AACA;;AAEDJ,MAAAA,GAAG,GAAGE,OAAO,GAAGD,IAAhB;AACA;;AAED,WAAOH,IAAI,CAAE,EACZ,GAAGC,eADS;AAEZC,MAAAA;AAFY,KAAF,CAAX;AAIA,GA9BoC,CAArC;AA+BA,CAhCD;;AAkCA,eAAeL,uBAAf","sourcesContent":["/**\n * Internal dependencies\n */\nimport namespaceAndEndpointMiddleware from './namespace-endpoint';\n\n/**\n * @param {string} rootURL\n * @return {import('../types').APIFetchMiddleware} Root URL middleware.\n */\nconst createRootURLMiddleware = ( rootURL ) => ( options, next ) => {\n\treturn namespaceAndEndpointMiddleware( options, ( optionsWithPath ) => {\n\t\tlet url = optionsWithPath.url;\n\t\tlet path = optionsWithPath.path;\n\t\tlet apiRoot;\n\n\t\tif ( typeof path === 'string' ) {\n\t\t\tapiRoot = rootURL;\n\n\t\t\tif ( -1 !== rootURL.indexOf( '?' ) ) {\n\t\t\t\tpath = path.replace( '?', '&' );\n\t\t\t}\n\n\t\t\tpath = path.replace( /^\\//, '' );\n\n\t\t\t// API root may already include query parameter prefix if site is\n\t\t\t// configured to use plain permalinks.\n\t\t\tif (\n\t\t\t\t'string' === typeof apiRoot &&\n\t\t\t\t-1 !== apiRoot.indexOf( '?' )\n\t\t\t) {\n\t\t\t\tpath = path.replace( '?', '&' );\n\t\t\t}\n\n\t\t\turl = apiRoot + path;\n\t\t}\n\n\t\treturn next( {\n\t\t\t...optionsWithPath,\n\t\t\turl,\n\t\t} );\n\t} );\n};\n\nexport default createRootURLMiddleware;\n"]}