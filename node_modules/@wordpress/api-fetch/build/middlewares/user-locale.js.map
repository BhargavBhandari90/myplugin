{"version":3,"sources":["@wordpress/api-fetch/src/middlewares/user-locale.js"],"names":["userLocaleMiddleware","options","next","url","_locale","path"],"mappings":";;;;;;;AAGA;;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAG,CAAEC,OAAF,EAAWC,IAAX,KAAqB;AACjD,MACC,OAAOD,OAAO,CAACE,GAAf,KAAuB,QAAvB,IACA,CAAE,sBAAaF,OAAO,CAACE,GAArB,EAA0B,SAA1B,CAFH,EAGE;AACDF,IAAAA,OAAO,CAACE,GAAR,GAAc,uBAAcF,OAAO,CAACE,GAAtB,EAA2B;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA3B,CAAd;AACA;;AAED,MACC,OAAOH,OAAO,CAACI,IAAf,KAAwB,QAAxB,IACA,CAAE,sBAAaJ,OAAO,CAACI,IAArB,EAA2B,SAA3B,CAFH,EAGE;AACDJ,IAAAA,OAAO,CAACI,IAAR,GAAe,uBAAcJ,OAAO,CAACI,IAAtB,EAA4B;AAAED,MAAAA,OAAO,EAAE;AAAX,KAA5B,CAAf;AACA;;AAED,SAAOF,IAAI,CAAED,OAAF,CAAX;AACA,CAhBD;;eAkBeD,oB","sourcesContent":["/**\n * WordPress dependencies\n */\nimport { addQueryArgs, hasQueryArg } from '@wordpress/url';\n\n/**\n * @type {import('../types').APIFetchMiddleware}\n */\nconst userLocaleMiddleware = ( options, next ) => {\n\tif (\n\t\ttypeof options.url === 'string' &&\n\t\t! hasQueryArg( options.url, '_locale' )\n\t) {\n\t\toptions.url = addQueryArgs( options.url, { _locale: 'user' } );\n\t}\n\n\tif (\n\t\ttypeof options.path === 'string' &&\n\t\t! hasQueryArg( options.path, '_locale' )\n\t) {\n\t\toptions.path = addQueryArgs( options.path, { _locale: 'user' } );\n\t}\n\n\treturn next( options );\n};\n\nexport default userLocaleMiddleware;\n"]}