{"version":3,"sources":["@wordpress/core-data/src/actions.js"],"names":["receiveUserQuery","queryID","users","type","receiveCurrentUser","currentUser","addEntities","entities","receiveEntityRecords","kind","name","records","query","invalidateCache","edits","map","record","status","title","action","receiveCurrentTheme","currentTheme","__experimentalReceiveCurrentGlobalStylesId","currentGlobalStylesId","id","__experimentalReceiveThemeBaseGlobalStyles","stylesheet","globalStyles","__experimentalReceiveThemeGlobalStyleVariations","variations","receiveThemeSupports","since","receiveEmbedPreview","url","preview","deleteEntityRecord","recordId","__unstableFetch","apiFetch","throwOnError","dispatch","configs","entityConfig","error","deletedRecord","__experimentalNoFetch","lock","__unstableAcquireStoreLock","STORE_NAME","exclusive","hasError","path","baseURL","method","_error","__unstableReleaseStoreLock","editEntityRecord","options","select","getEntityConfig","Error","transientEdits","mergedEdits","getRawEntityRecord","editedRecord","getEditedEntityRecord","edit","Object","keys","reduce","acc","key","recordValue","editedRecordValue","value","undefined","meta","undo","undoIgnore","undoEdit","getUndoEdit","isUndo","redo","redoEdit","getRedoEdit","isRedo","__unstableCreateUndoLevel","saveEntityRecord","isAutosave","resolveSelect","entityIdKey","DEFAULT_ENTITY_KEY","entries","evaluatedValue","updatedRecord","persistedRecord","getCurrentUser","currentUserId","autosavePost","getAutosave","data","includes","newRecord","receiveAutosaves","__unstablePrePersist","__experimentalBatch","requests","batch","api","add","saveEditedEntityRecord","resultPromises","request","results","Promise","all","run","hasEditsForEntityRecord","getEntityRecordNonTransientEdits","__experimentalSaveSpecifiedEntityEdits","itemsToSave","editsToSave","some","item","receiveUploadPermissions","hasUploadPermissions","alternative","receiveUserPermission","isAllowed","postId","autosaves"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;;AACA;;AAKA;;AACA;;AACA;;AAKA;;AACA;;AACA;;AACA;;AAnBA;AACA;AACA;;AAIA;AACA;AACA;;AAKA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASA,gBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA4C;AAClD,SAAO;AACNC,IAAAA,IAAI,EAAE,oBADA;AAEND,IAAAA,KAAK,EAAE,uBAAWA,KAAX,CAFD;AAGND,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASG,kBAAT,CAA6BC,WAA7B,EAA2C;AACjD,SAAO;AACNF,IAAAA,IAAI,EAAE,sBADA;AAENE,IAAAA;AAFM,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,WAAT,CAAsBC,QAAtB,EAAiC;AACvC,SAAO;AACNJ,IAAAA,IAAI,EAAE,cADA;AAENI,IAAAA;AAFM,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,oBAAT,CACNC,IADM,EAENC,IAFM,EAGNC,OAHM,EAINC,KAJM,EAOL;AAAA,MAFDC,eAEC,uEAFiB,KAEjB;AAAA,MADDC,KACC;;AACD;AACA;AACA,MAAKL,IAAI,KAAK,UAAd,EAA2B;AAC1BE,IAAAA,OAAO,GAAG,uBAAWA,OAAX,EAAqBI,GAArB,CAA4BC,MAAF,IACnCA,MAAM,CAACC,MAAP,KAAkB,YAAlB,GAAiC,EAAE,GAAGD,MAAL;AAAaE,MAAAA,KAAK,EAAE;AAApB,KAAjC,GAA4DF,MADnD,CAAV;AAGA;;AACD,MAAIG,MAAJ;;AACA,MAAKP,KAAL,EAAa;AACZO,IAAAA,MAAM,GAAG,sCAAqBR,OAArB,EAA8BC,KAA9B,EAAqCE,KAArC,CAAT;AACA,GAFD,MAEO;AACNK,IAAAA,MAAM,GAAG,+BAAcR,OAAd,EAAuBG,KAAvB,CAAT;AACA;;AAED,SAAO,EACN,GAAGK,MADG;AAENV,IAAAA,IAFM;AAGNC,IAAAA,IAHM;AAING,IAAAA;AAJM,GAAP;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASO,mBAAT,CAA8BC,YAA9B,EAA6C;AACnD,SAAO;AACNlB,IAAAA,IAAI,EAAE,uBADA;AAENkB,IAAAA;AAFM,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,0CAAT,CACNC,qBADM,EAEL;AACD,SAAO;AACNpB,IAAAA,IAAI,EAAE,kCADA;AAENqB,IAAAA,EAAE,EAAED;AAFE,GAAP;AAIA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASE,0CAAT,CACNC,UADM,EAENC,YAFM,EAGL;AACD,SAAO;AACNxB,IAAAA,IAAI,EAAE,6BADA;AAENuB,IAAAA,UAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,+CAAT,CACNF,UADM,EAENG,UAFM,EAGL;AACD,SAAO;AACN1B,IAAAA,IAAI,EAAE,uCADA;AAENuB,IAAAA,UAFM;AAGNG,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAASC,oBAAT,GAAgC;AACtC,2BAAY,iDAAZ,EAA+D;AAC9DC,IAAAA,KAAK,EAAE;AADuD,GAA/D;AAIA,SAAO;AACN5B,IAAAA,IAAI,EAAE;AADA,GAAP;AAGA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,SAAS6B,mBAAT,CAA8BC,GAA9B,EAAmCC,OAAnC,EAA6C;AACnD,SAAO;AACN/B,IAAAA,IAAI,EAAE,uBADA;AAEN8B,IAAAA,GAFM;AAGNC,IAAAA;AAHM,GAAP;AAKA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACO,MAAMC,kBAAkB,GAC9B,UACC1B,IADD,EAECC,IAFD,EAGC0B,QAHD,EAICxB,KAJD;AAAA,MAKC;AAAEyB,IAAAA,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","sourcesContent":["/**\n * External dependencies\n */\nimport { castArray, isEqual, find } from 'lodash';\nimport { v4 as uuid } from 'uuid';\n\n/**\n * WordPress dependencies\n */\nimport apiFetch from '@wordpress/api-fetch';\nimport { addQueryArgs } from '@wordpress/url';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { receiveItems, removeItems, receiveQueriedItems } from './queried-data';\nimport { getOrLoadEntitiesConfig, DEFAULT_ENTITY_KEY } from './entities';\nimport { createBatch } from './batch';\nimport { STORE_NAME } from './name';\n\n/**\n * Returns an action object used in signalling that authors have been received.\n *\n * @param {string}       queryID Query ID.\n * @param {Array|Object} users   Users received.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserQuery( queryID, users ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_QUERY',\n\t\tusers: castArray( users ),\n\t\tqueryID,\n\t};\n}\n\n/**\n * Returns an action used in signalling that the current user has been received.\n *\n * @param {Object} currentUser Current user object.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentUser( currentUser ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_USER',\n\t\tcurrentUser,\n\t};\n}\n\n/**\n * Returns an action object used in adding new entities.\n *\n * @param {Array} entities Entities received.\n *\n * @return {Object} Action object.\n */\nexport function addEntities( entities ) {\n\treturn {\n\t\ttype: 'ADD_ENTITIES',\n\t\tentities,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that entity records have been received.\n *\n * @param {string}       kind            Kind of the received entity record.\n * @param {string}       name            Name of the received entity record.\n * @param {Array|Object} records         Records received.\n * @param {?Object}      query           Query Object.\n * @param {?boolean}     invalidateCache Should invalidate query caches.\n * @param {?Object}      edits           Edits to reset.\n * @return {Object} Action object.\n */\nexport function receiveEntityRecords(\n\tkind,\n\tname,\n\trecords,\n\tquery,\n\tinvalidateCache = false,\n\tedits\n) {\n\t// Auto drafts should not have titles, but some plugins rely on them so we can't filter this\n\t// on the server.\n\tif ( kind === 'postType' ) {\n\t\trecords = castArray( records ).map( ( record ) =>\n\t\t\trecord.status === 'auto-draft' ? { ...record, title: '' } : record\n\t\t);\n\t}\n\tlet action;\n\tif ( query ) {\n\t\taction = receiveQueriedItems( records, query, edits );\n\t} else {\n\t\taction = receiveItems( records, edits );\n\t}\n\n\treturn {\n\t\t...action,\n\t\tkind,\n\t\tname,\n\t\tinvalidateCache,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current theme has been received.\n *\n * @param {Object} currentTheme The current theme.\n *\n * @return {Object} Action object.\n */\nexport function receiveCurrentTheme( currentTheme ) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_THEME',\n\t\tcurrentTheme,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the current global styles id has been received.\n *\n * @param {string} currentGlobalStylesId The current global styles id.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveCurrentGlobalStylesId(\n\tcurrentGlobalStylesId\n) {\n\treturn {\n\t\ttype: 'RECEIVE_CURRENT_GLOBAL_STYLES_ID',\n\t\tid: currentGlobalStylesId,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme base global styles have been received\n *\n * @param {string} stylesheet   The theme's identifier\n * @param {Object} globalStyles The global styles object.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeBaseGlobalStyles(\n\tstylesheet,\n\tglobalStyles\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLES',\n\t\tstylesheet,\n\t\tglobalStyles,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the theme global styles variations have been received.\n *\n * @param {string} stylesheet The theme's identifier\n * @param {Array}  variations The global styles variations.\n *\n * @return {Object} Action object.\n */\nexport function __experimentalReceiveThemeGlobalStyleVariations(\n\tstylesheet,\n\tvariations\n) {\n\treturn {\n\t\ttype: 'RECEIVE_THEME_GLOBAL_STYLE_VARIATIONS',\n\t\tstylesheet,\n\t\tvariations,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the index has been received.\n *\n * @deprecated since WP 5.9, this is not useful anymore, use the selector direclty.\n *\n * @return {Object} Action object.\n */\nexport function receiveThemeSupports() {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveThemeSupports\", {\n\t\tsince: '5.9',\n\t} );\n\n\treturn {\n\t\ttype: 'DO_NOTHING',\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the preview data for\n * a given URl has been received.\n *\n * @param {string} url     URL to preview the embed for.\n * @param {*}      preview Preview data.\n *\n * @return {Object} Action object.\n */\nexport function receiveEmbedPreview( url, preview ) {\n\treturn {\n\t\ttype: 'RECEIVE_EMBED_PREVIEW',\n\t\turl,\n\t\tpreview,\n\t};\n}\n\n/**\n * Action triggered to delete an entity record.\n *\n * @param {string}   kind                         Kind of the deleted entity.\n * @param {string}   name                         Name of the deleted entity.\n * @param {string}   recordId                     Record ID of the deleted entity.\n * @param {?Object}  query                        Special query parameters for the\n *                                                DELETE API call.\n * @param {Object}   [options]                    Delete options.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const deleteEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecordId,\n\t\tquery,\n\t\t{ __unstableFetch = apiFetch, throwOnError = false } = {}\n\t) =>\n\tasync ( { dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = find( configs, { kind, name } );\n\t\tlet error;\n\t\tlet deletedRecord = false;\n\t\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t} );\n\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tlet path = `${ entityConfig.baseURL }/${ recordId }`;\n\n\t\t\t\tif ( query ) {\n\t\t\t\t\tpath = addQueryArgs( path, query );\n\t\t\t\t}\n\n\t\t\t\tdeletedRecord = await __unstableFetch( {\n\t\t\t\t\tpath,\n\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t} );\n\n\t\t\t\tawait dispatch( removeItems( kind, name, recordId, true ) );\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'DELETE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn deletedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Returns an action object that triggers an\n * edit to an entity record.\n *\n * @param {string}  kind                 Kind of the edited entity record.\n * @param {string}  name                 Name of the edited entity record.\n * @param {number}  recordId             Record ID of the edited entity record.\n * @param {Object}  edits                The edits.\n * @param {Object}  options              Options for the edit.\n * @param {boolean} [options.undoIgnore] Whether to ignore the edit in undo history or not.\n *\n * @return {Object} Action object.\n */\nexport const editEntityRecord =\n\t( kind, name, recordId, edits, options = {} ) =>\n\t( { select, dispatch } ) => {\n\t\tconst entityConfig = select.getEntityConfig( kind, name );\n\t\tif ( ! entityConfig ) {\n\t\t\tthrow new Error(\n\t\t\t\t`The entity being edited (${ kind }, ${ name }) does not have a loaded config.`\n\t\t\t);\n\t\t}\n\t\tconst { transientEdits = {}, mergedEdits = {} } = entityConfig;\n\t\tconst record = select.getRawEntityRecord( kind, name, recordId );\n\t\tconst editedRecord = select.getEditedEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\n\t\tconst edit = {\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId,\n\t\t\t// Clear edits when they are equal to their persisted counterparts\n\t\t\t// so that the property is not considered dirty.\n\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\tconst recordValue = record[ key ];\n\t\t\t\tconst editedRecordValue = editedRecord[ key ];\n\t\t\t\tconst value = mergedEdits[ key ]\n\t\t\t\t\t? { ...editedRecordValue, ...edits[ key ] }\n\t\t\t\t\t: edits[ key ];\n\t\t\t\tacc[ key ] = isEqual( recordValue, value ) ? undefined : value;\n\t\t\t\treturn acc;\n\t\t\t}, {} ),\n\t\t\ttransientEdits,\n\t\t};\n\t\tdispatch( {\n\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t...edit,\n\t\t\tmeta: {\n\t\t\t\tundo: ! options.undoIgnore && {\n\t\t\t\t\t...edit,\n\t\t\t\t\t// Send the current values for things like the first undo stack entry.\n\t\t\t\t\tedits: Object.keys( edits ).reduce( ( acc, key ) => {\n\t\t\t\t\t\tacc[ key ] = editedRecord[ key ];\n\t\t\t\t\t\treturn acc;\n\t\t\t\t\t}, {} ),\n\t\t\t\t},\n\t\t\t},\n\t\t} );\n\t};\n\n/**\n * Action triggered to undo the last edit to\n * an entity record, if any.\n */\nexport const undo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst undoEdit = select.getUndoEdit();\n\t\tif ( ! undoEdit ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t...undoEdit,\n\t\t\tmeta: { isUndo: true },\n\t\t} );\n\t};\n\n/**\n * Action triggered to redo the last undoed\n * edit to an entity record, if any.\n */\nexport const redo =\n\t() =>\n\t( { select, dispatch } ) => {\n\t\tconst redoEdit = select.getRedoEdit();\n\t\tif ( ! redoEdit ) {\n\t\t\treturn;\n\t\t}\n\t\tdispatch( {\n\t\t\ttype: 'EDIT_ENTITY_RECORD',\n\t\t\t...redoEdit,\n\t\t\tmeta: { isRedo: true },\n\t\t} );\n\t};\n\n/**\n * Forces the creation of a new undo level.\n *\n * @return {Object} Action object.\n */\nexport function __unstableCreateUndoLevel() {\n\treturn { type: 'CREATE_UNDO_LEVEL' };\n}\n\n/**\n * Action triggered to save an entity record.\n *\n * @param {string}   kind                         Kind of the received entity.\n * @param {string}   name                         Name of the received entity.\n * @param {Object}   record                       Record to be saved.\n * @param {Object}   options                      Saving options.\n * @param {boolean}  [options.isAutosave=false]   Whether this is an autosave.\n * @param {Function} [options.__unstableFetch]    Internal use only. Function to\n *                                                call instead of `apiFetch()`.\n *                                                Must return a promise.\n * @param {boolean}  [options.throwOnError=false] If false, this action suppresses all\n *                                                the exceptions. Defaults to false.\n */\nexport const saveEntityRecord =\n\t(\n\t\tkind,\n\t\tname,\n\t\trecord,\n\t\t{\n\t\t\tisAutosave = false,\n\t\t\t__unstableFetch = apiFetch,\n\t\t\tthrowOnError = false,\n\t\t} = {}\n\t) =>\n\tasync ( { select, resolveSelect, dispatch } ) => {\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = find( configs, { kind, name } );\n\t\tif ( ! entityConfig || entityConfig?.__experimentalNoFetch ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\t\tconst recordId = record[ entityIdKey ];\n\n\t\tconst lock = await dispatch.__unstableAcquireStoreLock(\n\t\t\tSTORE_NAME,\n\t\t\t[ 'entities', 'records', kind, name, recordId || uuid() ],\n\t\t\t{ exclusive: true }\n\t\t);\n\n\t\ttry {\n\t\t\t// Evaluate optimized edits.\n\t\t\t// (Function edits that should be evaluated on save to avoid expensive computations on every edit.)\n\t\t\tfor ( const [ key, value ] of Object.entries( record ) ) {\n\t\t\t\tif ( typeof value === 'function' ) {\n\t\t\t\t\tconst evaluatedValue = value(\n\t\t\t\t\t\tselect.getEditedEntityRecord( kind, name, recordId )\n\t\t\t\t\t);\n\t\t\t\t\tdispatch.editEntityRecord(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\trecordId,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t[ key ]: evaluatedValue,\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{ undoIgnore: true }\n\t\t\t\t\t);\n\t\t\t\t\trecord[ key ] = evaluatedValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_START',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\t\t\tlet updatedRecord;\n\t\t\tlet error;\n\t\t\tlet hasError = false;\n\t\t\ttry {\n\t\t\t\tconst path = `${ entityConfig.baseURL }${\n\t\t\t\t\trecordId ? '/' + recordId : ''\n\t\t\t\t}`;\n\t\t\t\tconst persistedRecord = select.getRawEntityRecord(\n\t\t\t\t\tkind,\n\t\t\t\t\tname,\n\t\t\t\t\trecordId\n\t\t\t\t);\n\n\t\t\t\tif ( isAutosave ) {\n\t\t\t\t\t// Most of this autosave logic is very specific to posts.\n\t\t\t\t\t// This is fine for now as it is the only supported autosave,\n\t\t\t\t\t// but ideally this should all be handled in the back end,\n\t\t\t\t\t// so the client just sends and receives objects.\n\t\t\t\t\tconst currentUser = select.getCurrentUser();\n\t\t\t\t\tconst currentUserId = currentUser\n\t\t\t\t\t\t? currentUser.id\n\t\t\t\t\t\t: undefined;\n\t\t\t\t\tconst autosavePost = await resolveSelect.getAutosave(\n\t\t\t\t\t\tpersistedRecord.type,\n\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\tcurrentUserId\n\t\t\t\t\t);\n\t\t\t\t\t// Autosaves need all expected fields to be present.\n\t\t\t\t\t// So we fallback to the previous autosave and then\n\t\t\t\t\t// to the actual persisted entity if the edits don't\n\t\t\t\t\t// have a value.\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t...autosavePost,\n\t\t\t\t\t\t...record,\n\t\t\t\t\t};\n\t\t\t\t\tdata = Object.keys( data ).reduce(\n\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\tacc[ key ] = data[ key ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tstatus:\n\t\t\t\t\t\t\t\tdata.status === 'auto-draft'\n\t\t\t\t\t\t\t\t\t? 'draft'\n\t\t\t\t\t\t\t\t\t: data.status,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath: `${ path }/autosaves`,\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\tdata,\n\t\t\t\t\t} );\n\n\t\t\t\t\t// An autosave may be processed by the server as a regular save\n\t\t\t\t\t// when its update is requested by the author and the post had\n\t\t\t\t\t// draft or auto-draft status.\n\t\t\t\t\tif ( persistedRecord.id === updatedRecord.id ) {\n\t\t\t\t\t\tlet newRecord = {\n\t\t\t\t\t\t\t...persistedRecord,\n\t\t\t\t\t\t\t...data,\n\t\t\t\t\t\t\t...updatedRecord,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tnewRecord = Object.keys( newRecord ).reduce(\n\t\t\t\t\t\t\t( acc, key ) => {\n\t\t\t\t\t\t\t\t// These properties are persisted in autosaves.\n\t\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t\t[ 'title', 'excerpt', 'content' ].includes(\n\t\t\t\t\t\t\t\t\t\tkey\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t\tacc[ key ] = newRecord[ key ];\n\t\t\t\t\t\t\t\t} else if ( key === 'status' ) {\n\t\t\t\t\t\t\t\t\t// Status is only persisted in autosaves when going from\n\t\t\t\t\t\t\t\t\t// \"auto-draft\" to \"draft\".\n\t\t\t\t\t\t\t\t\tacc[ key ] =\n\t\t\t\t\t\t\t\t\t\tpersistedRecord.status ===\n\t\t\t\t\t\t\t\t\t\t\t'auto-draft' &&\n\t\t\t\t\t\t\t\t\t\tnewRecord.status === 'draft'\n\t\t\t\t\t\t\t\t\t\t\t? newRecord.status\n\t\t\t\t\t\t\t\t\t\t\t: persistedRecord.status;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// These properties are not persisted in autosaves.\n\t\t\t\t\t\t\t\t\tacc[ key ] = persistedRecord[ key ];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn acc;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{}\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\t\tkind,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tnewRecord,\n\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdispatch.receiveAutosaves(\n\t\t\t\t\t\t\tpersistedRecord.id,\n\t\t\t\t\t\t\tupdatedRecord\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlet edits = record;\n\t\t\t\t\tif ( entityConfig.__unstablePrePersist ) {\n\t\t\t\t\t\tedits = {\n\t\t\t\t\t\t\t...edits,\n\t\t\t\t\t\t\t...entityConfig.__unstablePrePersist(\n\t\t\t\t\t\t\t\tpersistedRecord,\n\t\t\t\t\t\t\t\tedits\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tupdatedRecord = await __unstableFetch( {\n\t\t\t\t\t\tpath,\n\t\t\t\t\t\tmethod: recordId ? 'PUT' : 'POST',\n\t\t\t\t\t\tdata: edits,\n\t\t\t\t\t} );\n\t\t\t\t\tdispatch.receiveEntityRecords(\n\t\t\t\t\t\tkind,\n\t\t\t\t\t\tname,\n\t\t\t\t\t\tupdatedRecord,\n\t\t\t\t\t\tundefined,\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tedits\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t} catch ( _error ) {\n\t\t\t\thasError = true;\n\t\t\t\terror = _error;\n\t\t\t}\n\t\t\tdispatch( {\n\t\t\t\ttype: 'SAVE_ENTITY_RECORD_FINISH',\n\t\t\t\tkind,\n\t\t\t\tname,\n\t\t\t\trecordId,\n\t\t\t\terror,\n\t\t\t\tisAutosave,\n\t\t\t} );\n\n\t\t\tif ( hasError && throwOnError ) {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn updatedRecord;\n\t\t} finally {\n\t\t\tdispatch.__unstableReleaseStoreLock( lock );\n\t\t}\n\t};\n\n/**\n * Runs multiple core-data actions at the same time using one API request.\n *\n * Example:\n *\n * ```\n * const [ savedRecord, updatedRecord, deletedRecord ] =\n *   await dispatch( 'core' ).__experimentalBatch( [\n *     ( { saveEntityRecord } ) => saveEntityRecord( 'root', 'widget', widget ),\n *     ( { saveEditedEntityRecord } ) => saveEntityRecord( 'root', 'widget', 123 ),\n *     ( { deleteEntityRecord } ) => deleteEntityRecord( 'root', 'widget', 123, null ),\n *   ] );\n * ```\n *\n * @param {Array} requests Array of functions which are invoked simultaneously.\n *                         Each function is passed an object containing\n *                         `saveEntityRecord`, `saveEditedEntityRecord`, and\n *                         `deleteEntityRecord`.\n *\n * @return {(thunkArgs: Object) => Promise} A promise that resolves to an array containing the return\n *                                          values of each function given in `requests`.\n */\nexport const __experimentalBatch =\n\t( requests ) =>\n\tasync ( { dispatch } ) => {\n\t\tconst batch = createBatch();\n\t\tconst api = {\n\t\t\tsaveEntityRecord( kind, name, record, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEntityRecord( kind, name, record, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tsaveEditedEntityRecord( kind, name, recordId, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.saveEditedEntityRecord( kind, name, recordId, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t\tdeleteEntityRecord( kind, name, recordId, query, options ) {\n\t\t\t\treturn batch.add( ( add ) =>\n\t\t\t\t\tdispatch.deleteEntityRecord( kind, name, recordId, query, {\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\t__unstableFetch: add,\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t},\n\t\t};\n\t\tconst resultPromises = requests.map( ( request ) => request( api ) );\n\t\tconst [ , ...results ] = await Promise.all( [\n\t\t\tbatch.run(),\n\t\t\t...resultPromises,\n\t\t] );\n\t\treturn results;\n\t};\n\n/**\n * Action triggered to save an entity record's edits.\n *\n * @param {string} kind     Kind of the entity.\n * @param {string} name     Name of the entity.\n * @param {Object} recordId ID of the record.\n * @param {Object} options  Saving options.\n */\nexport const saveEditedEntityRecord =\n\t( kind, name, recordId, options ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst configs = await dispatch( getOrLoadEntitiesConfig( kind ) );\n\t\tconst entityConfig = find( configs, { kind, name } );\n\t\tif ( ! entityConfig ) {\n\t\t\treturn;\n\t\t}\n\t\tconst entityIdKey = entityConfig.key || DEFAULT_ENTITY_KEY;\n\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst record = { [ entityIdKey ]: recordId, ...edits };\n\t\treturn await dispatch.saveEntityRecord( kind, name, record, options );\n\t};\n\n/**\n * Action triggered to save only specified properties for the entity.\n *\n * @param {string} kind        Kind of the entity.\n * @param {string} name        Name of the entity.\n * @param {Object} recordId    ID of the record.\n * @param {Array}  itemsToSave List of entity properties to save.\n * @param {Object} options     Saving options.\n */\nexport const __experimentalSaveSpecifiedEntityEdits =\n\t( kind, name, recordId, itemsToSave, options ) =>\n\tasync ( { select, dispatch } ) => {\n\t\tif ( ! select.hasEditsForEntityRecord( kind, name, recordId ) ) {\n\t\t\treturn;\n\t\t}\n\t\tconst edits = select.getEntityRecordNonTransientEdits(\n\t\t\tkind,\n\t\t\tname,\n\t\t\trecordId\n\t\t);\n\t\tconst editsToSave = {};\n\t\tfor ( const edit in edits ) {\n\t\t\tif ( itemsToSave.some( ( item ) => item === edit ) ) {\n\t\t\t\teditsToSave[ edit ] = edits[ edit ];\n\t\t\t}\n\t\t}\n\t\treturn await dispatch.saveEntityRecord(\n\t\t\tkind,\n\t\t\tname,\n\t\t\teditsToSave,\n\t\t\toptions\n\t\t);\n\t};\n\n/**\n * Returns an action object used in signalling that Upload permissions have been received.\n *\n * @deprecated since WP 5.9, use receiveUserPermission instead.\n *\n * @param {boolean} hasUploadPermissions Does the user have permission to upload files?\n *\n * @return {Object} Action object.\n */\nexport function receiveUploadPermissions( hasUploadPermissions ) {\n\tdeprecated( \"wp.data.dispatch( 'core' ).receiveUploadPermissions\", {\n\t\tsince: '5.9',\n\t\talternative: 'receiveUserPermission',\n\t} );\n\n\treturn receiveUserPermission( 'create/media', hasUploadPermissions );\n}\n\n/**\n * Returns an action object used in signalling that the current user has\n * permission to perform an action on a REST resource.\n *\n * @param {string}  key       A key that represents the action and REST resource.\n * @param {boolean} isAllowed Whether or not the user can perform the action.\n *\n * @return {Object} Action object.\n */\nexport function receiveUserPermission( key, isAllowed ) {\n\treturn {\n\t\ttype: 'RECEIVE_USER_PERMISSION',\n\t\tkey,\n\t\tisAllowed,\n\t};\n}\n\n/**\n * Returns an action object used in signalling that the autosaves for a\n * post have been received.\n *\n * @param {number}       postId    The id of the post that is parent to the autosave.\n * @param {Array|Object} autosaves An array of autosaves or singular autosave object.\n *\n * @return {Object} Action object.\n */\nexport function receiveAutosaves( postId, autosaves ) {\n\treturn {\n\t\ttype: 'RECEIVE_AUTOSAVES',\n\t\tpostId,\n\t\tautosaves: castArray( autosaves ),\n\t};\n}\n"]}