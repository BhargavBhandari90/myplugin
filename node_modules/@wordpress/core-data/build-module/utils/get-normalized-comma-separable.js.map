{"version":3,"sources":["@wordpress/core-data/src/utils/get-normalized-comma-separable.js"],"names":["getNormalizedCommaSeparable","value","split","Array","isArray"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,2BAAT,CAAsCC,KAAtC,EAA8C;AAC7C,MAAK,OAAOA,KAAP,KAAiB,QAAtB,EAAiC;AAChC,WAAOA,KAAK,CAACC,KAAN,CAAa,GAAb,CAAP;AACA,GAFD,MAEO,IAAKC,KAAK,CAACC,OAAN,CAAeH,KAAf,CAAL,EAA8B;AACpC,WAAOA,KAAP;AACA;;AAED,SAAO,IAAP;AACA;;AAED,eAAeD,2BAAf","sourcesContent":["/**\n * Given a value which can be specified as one or the other of a comma-separated\n * string or an array, returns a value normalized to an array of strings, or\n * null if the value cannot be interpreted as either.\n *\n * @param {string|string[]|*} value\n *\n * @return {?(string[])} Normalized field value.\n */\nfunction getNormalizedCommaSeparable( value ) {\n\tif ( typeof value === 'string' ) {\n\t\treturn value.split( ',' );\n\t} else if ( Array.isArray( value ) ) {\n\t\treturn value;\n\t}\n\n\treturn null;\n}\n\nexport default getNormalizedCommaSeparable;\n"]}