{"version":3,"sources":["@wordpress/dom/src/dom/get-scroll-container.js"],"names":["getComputedStyle","getScrollContainer","node","undefined","scrollHeight","clientHeight","overflowY","test","parentNode"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,gBAAP,MAA6B,sBAA7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,kBAAT,CAA6BC,IAA7B,EAAoC;AAClD,MAAK,CAAEA,IAAP,EAAc;AACb,WAAOC,SAAP;AACA,GAHiD,CAKlD;;;AACA,MAAKD,IAAI,CAACE,YAAL,GAAoBF,IAAI,CAACG,YAA9B,EAA6C;AAC5C;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAgBN,gBAAgB,CAAEE,IAAF,CAAtC;;AACA,QAAK,gBAAgBK,IAAhB,CAAsBD,SAAtB,CAAL,EAAyC;AACxC,aAAOJ,IAAP;AACA;AACD,GAZiD,CAclD;;;AACA,SAAOD,kBAAkB;AAAE;AAAyBC,EAAAA,IAAI,CAACM,UAAhC,CAAzB;AACA","sourcesContent":["/**\n * Internal dependencies\n */\nimport getComputedStyle from './get-computed-style';\n\n/**\n * Given a DOM node, finds the closest scrollable container node.\n *\n * @param {Element | null} node Node from which to start.\n *\n * @return {Element | undefined} Scrollable container node, if found.\n */\nexport default function getScrollContainer( node ) {\n\tif ( ! node ) {\n\t\treturn undefined;\n\t}\n\n\t// Scrollable if scrollable height exceeds displayed...\n\tif ( node.scrollHeight > node.clientHeight ) {\n\t\t// ...except when overflow is defined to be hidden or visible\n\t\tconst { overflowY } = getComputedStyle( node );\n\t\tif ( /(auto|scroll)/.test( overflowY ) ) {\n\t\t\treturn node;\n\t\t}\n\t}\n\n\t// Continue traversing.\n\treturn getScrollContainer( /** @type {Element} */ ( node.parentNode ) );\n}\n"]}