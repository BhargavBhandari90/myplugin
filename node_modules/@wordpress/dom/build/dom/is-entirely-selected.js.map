{"version":3,"sources":["@wordpress/dom/src/dom/is-entirely-selected.js"],"names":["isEntirelySelected","element","selectionStart","value","length","selectionEnd","isContentEditable","ownerDocument","defaultView","selection","getSelection","range","rangeCount","getRangeAt","startContainer","endContainer","startOffset","endOffset","childNodes","lastChild","endContainerContentLength","nodeType","TEXT_NODE","data","isDeepChild","query","container","propName","candidate"],"mappings":";;;;;;;;;AAGA;;AACA;;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,kBAAT,CAA6BC,OAA7B,EAAuC;AACrD,MAAK,gCAAmBA,OAAnB,CAAL,EAAoC;AACnC,WACCA,OAAO,CAACC,cAAR,KAA2B,CAA3B,IACAD,OAAO,CAACE,KAAR,CAAcC,MAAd,KAAyBH,OAAO,CAACI,YAFlC;AAIA;;AAED,MAAK,CAAEJ,OAAO,CAACK,iBAAf,EAAmC;AAClC,WAAO,IAAP;AACA;;AAED,QAAM;AAAEC,IAAAA;AAAF,MAAoBN,OAA1B;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAkBD,aAAxB;AACA,wCAAiBC,WAAjB,EAA8B,aAA9B;AACA,QAAMC,SAAS,GAAGD,WAAW,CAACE,YAAZ,EAAlB;AACA,wCAAiBD,SAAjB,EAA4B,WAA5B;AACA,QAAME,KAAK,GAAGF,SAAS,CAACG,UAAV,GAAuBH,SAAS,CAACI,UAAV,CAAsB,CAAtB,CAAvB,GAAmD,IAAjE;;AAEA,MAAK,CAAEF,KAAP,EAAe;AACd,WAAO,IAAP;AACA;;AAED,QAAM;AAAEG,IAAAA,cAAF;AAAkBC,IAAAA,YAAlB;AAAgCC,IAAAA,WAAhC;AAA6CC,IAAAA;AAA7C,MAA2DN,KAAjE;;AAEA,MACCG,cAAc,KAAKb,OAAnB,IACAc,YAAY,KAAKd,OADjB,IAEAe,WAAW,KAAK,CAFhB,IAGAC,SAAS,KAAKhB,OAAO,CAACiB,UAAR,CAAmBd,MAJlC,EAKE;AACD,WAAO,IAAP;AACA;;AAED,QAAMe,SAAS,GAAGlB,OAAO,CAACkB,SAA1B;AACA,wCAAiBA,SAAjB,EAA4B,WAA5B;AACA,QAAMC,yBAAyB,GAC9BL,YAAY,CAACM,QAAb,KAA0BN,YAAY,CAACO,SAAvC;AACG;AAAsBP,EAAAA,YAAF,CAAiBQ,IAAjB,CAAsBnB,MAD7C,GAEGW,YAAY,CAACG,UAAb,CAAwBd,MAH5B;AAKA,SACCoB,WAAW,CAAEV,cAAF,EAAkBb,OAAlB,EAA2B,YAA3B,CAAX,IACAuB,WAAW,CAAET,YAAF,EAAgBd,OAAhB,EAAyB,WAAzB,CADX,IAEAe,WAAW,KAAK,CAFhB,IAGAC,SAAS,KAAKG,yBAJf;AAMA;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASI,WAAT,CAAsBC,KAAtB,EAA6BC,SAA7B,EAAwCC,QAAxC,EAAmD;AAClD;AACA,MAAIC,SAAS,GAAGF,SAAhB;;AACA,KAAG;AACF,QAAKD,KAAK,KAAKG,SAAf,EAA2B;AAC1B,aAAO,IAAP;AACA;;AACDA,IAAAA,SAAS,GAAGA,SAAS,CAAED,QAAF,CAArB;AACA,GALD,QAKUC,SALV;;AAMA,SAAO,KAAP;AACA","sourcesContent":["/**\n * Internal dependencies\n */\nimport { assertIsDefined } from '../utils/assert-is-defined';\nimport isInputOrTextArea from './is-input-or-text-area';\n\n/**\n * Check whether the contents of the element have been entirely selected.\n * Returns true if there is no possibility of selection.\n *\n * @param {HTMLElement} element The element to check.\n *\n * @return {boolean} True if entirely selected, false if not.\n */\nexport default function isEntirelySelected( element ) {\n\tif ( isInputOrTextArea( element ) ) {\n\t\treturn (\n\t\t\telement.selectionStart === 0 &&\n\t\t\telement.value.length === element.selectionEnd\n\t\t);\n\t}\n\n\tif ( ! element.isContentEditable ) {\n\t\treturn true;\n\t}\n\n\tconst { ownerDocument } = element;\n\tconst { defaultView } = ownerDocument;\n\tassertIsDefined( defaultView, 'defaultView' );\n\tconst selection = defaultView.getSelection();\n\tassertIsDefined( selection, 'selection' );\n\tconst range = selection.rangeCount ? selection.getRangeAt( 0 ) : null;\n\n\tif ( ! range ) {\n\t\treturn true;\n\t}\n\n\tconst { startContainer, endContainer, startOffset, endOffset } = range;\n\n\tif (\n\t\tstartContainer === element &&\n\t\tendContainer === element &&\n\t\tstartOffset === 0 &&\n\t\tendOffset === element.childNodes.length\n\t) {\n\t\treturn true;\n\t}\n\n\tconst lastChild = element.lastChild;\n\tassertIsDefined( lastChild, 'lastChild' );\n\tconst endContainerContentLength =\n\t\tendContainer.nodeType === endContainer.TEXT_NODE\n\t\t\t? /** @type {Text} */ ( endContainer ).data.length\n\t\t\t: endContainer.childNodes.length;\n\n\treturn (\n\t\tisDeepChild( startContainer, element, 'firstChild' ) &&\n\t\tisDeepChild( endContainer, element, 'lastChild' ) &&\n\t\tstartOffset === 0 &&\n\t\tendOffset === endContainerContentLength\n\t);\n}\n\n/**\n * Check whether the contents of the element have been entirely selected.\n * Returns true if there is no possibility of selection.\n *\n * @param {HTMLElement|Node}         query     The element to check.\n * @param {HTMLElement}              container The container that we suspect \"query\" may be a first or last child of.\n * @param {\"firstChild\"|\"lastChild\"} propName  \"firstChild\" or \"lastChild\"\n *\n * @return {boolean} True if query is a deep first/last child of container, false otherwise.\n */\nfunction isDeepChild( query, container, propName ) {\n\t/** @type {HTMLElement | ChildNode | null} */\n\tlet candidate = container;\n\tdo {\n\t\tif ( query === candidate ) {\n\t\t\treturn true;\n\t\t}\n\t\tcandidate = candidate[ propName ];\n\t} while ( candidate );\n\treturn false;\n}\n"]}